# polarion test case id: CEPH-83593390
# test scripts : test_sts_using_boto_session_policy.py
config:
     bucket_count: 2
     objects_count: 20
     objects_size_range:
          min: 5
          max: 15
     encryption_keys: kms
     lifecycle_conf:
        - ID: LC_Rule_1
          Filter:
            Prefix: key2
          Status: Enabled
          Expiration:
            Days: 20
     test_ops:
          create_bucket: true
          create_object: true
          endpoint: kafka
          ack_type: broker
          verify_policy: session_policy
          bucket_tags: [
              {
                  "Key": "product",
                  "Value": "ceph"
              }
          ]
     sts:
          policy_document:
               "Version": "2012-10-17"
               "Statement":
                    [
                         {
                              "Effect": "Allow",
                              "Principal":
                                   {
                                        "AWS":
                                             ["arn:aws:iam:::user/<user_name>"],
                                   },
                              "Action": ["sts:AssumeRole"],
                         },
                    ]
          role_policy:
               "Version": "2012-10-17"
               "Statement":
                    {
                         "Effect": "Allow",
                         "Action": "s3:*",
                         "Resource": "arn:aws:s3:::*",
                    }
          session_policy:
               "Version": "2012-10-17"
               "Statement":
                [
                    {
                         "Action": ["s3:PutObject", "s3:ListBucket", "s3:GetObject", "s3:DeleteObject", "s3:AbortMultipartUpload", "s3:PutBucketVersioning", "s3:GetBucketVersioning", "s3:PutBucketPolicy", "s3:GetBucketPolicy", "s3:DeleteBucketPolicy", "s3:PutBucketWebsite", "s3:GetBucketWebsite", "s3:PutLifecycleConfiguration", "s3:GetLifecycleConfiguration", "s3:PutBucketEncryption", "s3:GetBucketEncryption", "s3:PutBucketTagging", "s3:GetBucketTagging", "s3:DeleteBucket", "s3:CreateBucket"],
                         "Resource": "arn:aws:s3:::*",
                         "Effect": "Allow",
                         "Sid": "statement4",
                    }
               ]
